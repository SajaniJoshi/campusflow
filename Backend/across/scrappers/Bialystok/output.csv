"",Faculty of Mechanical Engineering
"",Degree level Bachelor's
Field of study,and programme degree/Master's
"",type degree
Specialization/,
"",Study profile general
diploma path,
"",Course code IS-FME-00179W
"",Advanced course of programming in
Course name,
"",Python
"",Course type
Forms and,L C LC P SW FW S Semester winter
number of hours,
"",No. of ECTS
of tuition,15 30 3
"",credits
Entry,
"","mathematics, computer science,"
requirements,
"",To prepare the students with the knowledge of concepts of object oriented
Course,"programming in Python, get started with Tkinter with a basic application, Work with"
objectives,"widgets, such as buttons and text boxes, control your application layout with"
"",geometry managers and make applications interactive
"",Object-oriented programming: creating classes and using objects; Introduction to GUI
Course content,programming using Tkinter; Widgets and Layouts; Geometry managers; Commands
"",with buttons and timers; Events and bindings; Menu Bar; Other widgets
"",depending on number of students enrolled: • lectures or classes : 1-8 students - self-
Teaching,
"",study under supervision of a teacher; 9 and more students - lectures given by
methods,
"",a teacher or classes with a teacher
Assessment,
"","lecture – written exam; project – project completion, presentation and discussion"
method,
Symbol of,Reference to the
learning,Learning outcomes learning outcomes for
outcome,the field of study
"","student: knows the basic concepts of object-oriented M2_W06, M2_W12"
LO1,
"",programming
LO2,"can build an object and use it in an application environment M2_W06, M2_U20"
LO3,"uses inheritance to modify objects M2_W06, M2_U05"
LO4,"can handle application errors M2_W06, M2_U18"
"","M2_U01, M2_K1,"
LO5,can write a simple GUI program
"",M2_U18
LO6,
Symbol of,Type of tuition during
learning,Methods of assessing the learning outcomes which the outcome is
outcome,assessed
LO1,"written exam, project tasks evaluation, activity during project L"
"",classes
"","written exam, project tasks evaluation, activity during project"
LO2,"L, P"
"",classes
"","written exam, project tasks evaluation, activity during project"
LO3,"L, P"
"",classes
"","written exam, project tasks evaluation, activity during project"
LO4,"L, P"
"",classes
"","written exam, project tasks evaluation, activity during project"
LO5,"L, P"
"",classes
LO6,
"",Student workload (in hours) No. of hours
"",lecture attendance 15
"","participation in classes, laboratory classes, etc. 30"
"","preparation for classes, laboratory classes, projects,"
"",10
"","seminars, etc."
Calculation,"working on projects, reports, etc. 20"
"",participation in student-teacher sessions related to the
"",5
"",classes/seminar/project
"",preparation for and participation in exams/tests 2
"",TOTAL: 82
"",No. of
"",Quantitative indicators HOURS ECTS
"",credits
Student workload – activities that require direct teacher participation,47 2
"",Student workload – practical activities 35 1
"",Graphical User Interfaces with Tk; https://docs.python.org/3/library/tk.html
Basic references,Python GUI with Tkinter; https://coderslegacy.com/python/python-gui/
"",TkDocs Tutorial; http://www.tkdocs.com/tutorial/index.html
"","Allen Downey (2015), Think Python: How to Think Like a Computer Scientist,"
Supplementary,
"",http://cs.williams.edu/~cs134/thinkpython2.pdf
references,
"",Python 3.9.5 documentation; https://docs.python.org/3/
Organisational,
"",Date of issuing the
unit conducting,Department of Applied Informatics and Mechanics
"",programme
the course,
Author of the,
"","Adam Adamowicz, Phd. 18.05.2021"
programme,
