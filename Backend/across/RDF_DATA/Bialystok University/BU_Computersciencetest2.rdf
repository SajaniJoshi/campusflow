<?xml version="1.0" encoding="utf-8"?>
<rdf:RDF
   xmlns:ns1="http://tuc.web.engineering/module#"
   xmlns:ns2="http://tuc/web/engineering/module#"
   xmlns:ns3="http://tuc/course#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
>
  <rdf:Description rdf:about="http://tuc.web.engineering/module#025dfd82-cd19-11ee-97ee-d43d7e41305b">
    <rdf:type rdf:resource="http://tuc.web.engineering/module#"/>
    <ns1:hasModuleNumber rdf:datatype="http://www.w3.org/2001/XMLSchema#string">FCS-00082</ns1:hasModuleNumber>
    <ns1:hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Advanced Human-Computer Interaction and Application Usability</ns1:hasName>
    <ns1:hasContent rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Lectures: 1. Speech-to-text systems. 2. VoiceXML 3. Virtual Reality 4. Augmented Reality 5. UX techniques related to colour 6. Advanced input controllers. Classes: 1. Implement system that is controlled by speech. 2. Implement simple VR test project. 3. Test various input controllers.</ns1:hasContent>
    <ns1:hasCreditPoints rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6</ns1:hasCreditPoints>
    <ns1:hasWorkLoad rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">168</ns1:hasWorkLoad>
    <ns2:hasUniversity rdf:resource="http://across/university#BU"/>
    <ns3:hasCourse rdf:resource="http://tuc/course#Computersciencetest2"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://tuc.web.engineering/module#025e24b2-cd19-11ee-8321-d43d7e41305b">
    <rdf:type rdf:resource="http://tuc.web.engineering/module#"/>
    <ns1:hasModuleNumber rdf:datatype="http://www.w3.org/2001/XMLSchema#string">FCS-00090</ns1:hasModuleNumber>
    <ns1:hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Advanced Object-Oriented Programming Techniques</ns1:hasName>
    <ns1:hasContent rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Classes: Notion of the design pattern. Classification of the design patterns. Patterns: Singleton, Factory Method, Prototype, Abstract Factory, Builder, Proxy, Adapter, Decorator, Composite, Flyweight, Facade, Bridge, Command, Strategy, Template Method, Iterator, State, Mediator, Observer, Visitor. Specialization workshop: Writing/refactoring short program using chosen design patterns.</ns1:hasContent>
    <ns1:hasCreditPoints rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6</ns1:hasCreditPoints>
    <ns1:hasWorkLoad rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">168</ns1:hasWorkLoad>
    <ns2:hasUniversity rdf:resource="http://across/university#BU"/>
    <ns3:hasCourse rdf:resource="http://tuc/course#Computersciencetest2"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://tuc.web.engineering/module#025e727f-cd19-11ee-bad2-d43d7e41305b">
    <rdf:type rdf:resource="http://tuc.web.engineering/module#"/>
    <ns1:hasModuleNumber rdf:datatype="http://www.w3.org/2001/XMLSchema#string">FCS-00098</ns1:hasModuleNumber>
    <ns1:hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Algorithmics - Selected Issues</ns1:hasName>
    <ns1:hasContent rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Lecture: Graph browsing algorithms. BFS and DFS methods and their applications. Effective path algorithms for graphs with weights. Strategies: label-setting and label-corecting. The problem of maximum flow in the network and effective methods of its determination. The problem of the cheapest flow in the network - effective algorithms and examples of application. Graph and network problems difficult to solve. Examples of approximate solutions for graph problems of the NPC class. The traveling salesman problem and its variants. Examples of applications of various types of traveling salesman problems in information systems in the field of logistics and e-tourism class systems. Effective aprokysmation algorithms for different varieties of the traveling salesman problem. The problem of routing in transport networks. Specialist workshop: A problem task that requires the development of an algorithm based on BFS and DFS graph searching methods A problem task that requires the development of an algorithm based on the use of path algorithms A problem task that requires the development of an algorithm based on the use of networkflow algorithms A problem task that requires the development of an algorithm based on the use of approximation algorithms.</ns1:hasContent>
    <ns1:hasCreditPoints rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6</ns1:hasCreditPoints>
    <ns1:hasWorkLoad rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">168</ns1:hasWorkLoad>
    <ns2:hasUniversity rdf:resource="http://across/university#BU"/>
    <ns3:hasCourse rdf:resource="http://tuc/course#Computersciencetest2"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://tuc.web.engineering/module#025e998d-cd19-11ee-afb6-d43d7e41305b">
    <rdf:type rdf:resource="http://tuc.web.engineering/module#"/>
    <ns1:hasModuleNumber rdf:datatype="http://www.w3.org/2001/XMLSchema#string">FCS-00020</ns1:hasModuleNumber>
    <ns1:hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Algorithms and Data Structures</ns1:hasName>
    <ns1:hasContent rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Lecture 1) Basic concepts regarding algorithms (corectness, complexity) 2) Recursion as a technique of programming 3) Techniques of developing algorithms: "divide and conquer", greedy and dynamic programming 4) Implementations of dictionary structure (trees and hashtables) 6) Graph data structures and graph algorithms 7) Complexity classes (P, NP, NPC, NP-hard), examples of computationally hard problems 8) Approximate algorithms and heuristics Excersises: 1) Determining time complexity of computer programs, developing effective solutions for basic computational problems 2) Practice regarding recursion and "divide and conquer (desing of algorithms, computing time complexity) 3) Solving computational problems with greedy and dynamic programming techniques. 4) Effective data structures (heaps, trees, hashtables) 5) Solving graph problems 6) Recognition of computationally hard problems and applying approximate/heuristic solutions. Computer labs: 1) Basic computational problems, optimization of algorithms in terms of time complexity (comparison, design and implemantation) 2) Solving computational problems with recursion/"divide and conquer" techniques. 3) Design and implementation of efficient algorithms (greedy and dynamic programming techniques) solving combinatorial optimization problems. 4) Implementation of tree data structures 5) Solving graph problems.</ns1:hasContent>
    <ns1:hasCreditPoints rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6</ns1:hasCreditPoints>
    <ns1:hasWorkLoad rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">168</ns1:hasWorkLoad>
    <ns2:hasUniversity rdf:resource="http://across/university#BU"/>
    <ns3:hasCourse rdf:resource="http://tuc/course#Computersciencetest2"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://tuc.web.engineering/module#025ec0a4-cd19-11ee-bcfa-d43d7e41305b">
    <rdf:type rdf:resource="http://tuc.web.engineering/module#"/>
    <ns1:hasModuleNumber rdf:datatype="http://www.w3.org/2001/XMLSchema#string">FCS-00005</ns1:hasModuleNumber>
    <ns1:hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Artificial Intelligence</ns1:hasName>
    <ns1:hasContent rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Introduction to artificial intelligence. Discussion of notions about the Alan M. Turing test. Knowledge representation using rough set methods – Polish School of Artificial Intelligence. Basic methods for searching state space. Knowledge representation using neural networks, decision trees, evolutionary algorithms, and logic language. Selected applications of artificial intelligence systems for solving engineering and scientific problems. Design and implementation of computer applications that use artificial intelligence methods.</ns1:hasContent>
    <ns1:hasCreditPoints rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6</ns1:hasCreditPoints>
    <ns1:hasWorkLoad rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">168</ns1:hasWorkLoad>
    <ns2:hasUniversity rdf:resource="http://across/university#BU"/>
    <ns3:hasCourse rdf:resource="http://tuc/course#Computersciencetest2"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://tuc.web.engineering/module#025ee7cd-cd19-11ee-b8e1-d43d7e41305b">
    <rdf:type rdf:resource="http://tuc.web.engineering/module#"/>
    <ns1:hasModuleNumber rdf:datatype="http://www.w3.org/2001/XMLSchema#string">FCS-00096</ns1:hasModuleNumber>
    <ns1:hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Introduction to Machine Audition</ns1:hasName>
    <ns1:hasContent rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Lectures 1. Machine audition – Key concepts and topic overview 2. Speech and speaker recognition 3. Music information retrieval: music genre recognition, harmony, rhythm, and timbre characterization; pitch detection 4. Automatic audio classification 5. Computational audio scene analysis, blind audio signals separation 6. Auditory cognition, emotions recognition 7. Automatic audio event localization Specialization workshop 1. Implementation of algorithms for conditioning and pre-processing of speech and audio signals 2. Implementation of an algorithm for audio feature extraction 3. Implementation of a selected algorithm from the domain of speech recognition, audio classification, music information retrieval, or emotions recognition 4. Implementation of a simple real-time audio analysis method</ns1:hasContent>
    <ns1:hasCreditPoints rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6</ns1:hasCreditPoints>
    <ns1:hasWorkLoad rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">168</ns1:hasWorkLoad>
    <ns2:hasUniversity rdf:resource="http://across/university#BU"/>
    <ns3:hasCourse rdf:resource="http://tuc/course#Computersciencetest2"/>
  </rdf:Description>
  <rdf:Description rdf:about="http://tuc.web.engineering/module#025e4b98-cd19-11ee-a47e-d43d7e41305b">
    <rdf:type rdf:resource="http://tuc.web.engineering/module#"/>
    <ns1:hasModuleNumber rdf:datatype="http://www.w3.org/2001/XMLSchema#string">FCS-00028</ns1:hasModuleNumber>
    <ns1:hasName rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Advanced Database Systems and Data Warehouses</ns1:hasName>
    <ns1:hasContent rdf:datatype="http://www.w3.org/2001/XMLSchema#string">Lecture: 1. Procedural SQL. 2. Advanced database objects: functions, packages, triggers. 3. Optimizing queries in practice. 4. Data models in data warehouses. 5. Data warehouse architecture. 6. Advanced SQL: Grouping. 7. Advanced SQL: Analytical functions. 8. Data integration. 9. NoSQL databases. 11. Data analysis with Bayesian network models. Specialistic workshop: 1. Procedural SQL. 2. Advanced database objects: functions, packages, triggers. 3. Data models in data warehouses. 4. Advanced SQL: Grouping. 5. Advanced SQL: Analytical functions. 6. Data integration. 7. NoSQL databases. 8. Data analysis with Bayesian network models.</ns1:hasContent>
    <ns1:hasCreditPoints rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">6</ns1:hasCreditPoints>
    <ns1:hasWorkLoad rdf:datatype="http://www.w3.org/2001/XMLSchema#integer">168</ns1:hasWorkLoad>
    <ns2:hasUniversity rdf:resource="http://across/university#BU"/>
    <ns3:hasCourse rdf:resource="http://tuc/course#Computersciencetest2"/>
  </rdf:Description>
</rdf:RDF>
